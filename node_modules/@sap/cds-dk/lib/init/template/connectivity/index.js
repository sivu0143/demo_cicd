const { readProject } = require('../../projectReader')
const { merge } = require('../../merge')
const { srv4, connectivity } = require('../../registries/mta')

module.exports = class ConnectivityTemplate extends require('../../plugin') {

    static help() {
        return 'SAP BTP Connectivity Service'
    }

    static hasInProduction(env) {
        return !!env.requires.connectivity
    }

    async run() {
        const project = readProject()
        const { configFile } = project
        await merge(__dirname, 'files', 'package.json.hbs').into(configFile, { with: project })
    }

    async combine() {
        const project = readProject()
        const { srvPath, addHelm, addHelmUnifiedRuntime, addMta } = project

        if (addMta) {
            const srv = srv4(srvPath)
            const additions = [srv, connectivity]
            const relationships = [{
                insert: [connectivity, 'name'],
                into: [srv, 'requires', 'name']
            }]
            await merge(__dirname, 'files/mta.yaml.hbs').into('mta.yaml', { project, additions, relationships })
        }

        if (addHelm || addHelmUnifiedRuntime) {
            await merge(__dirname, 'files/values.yaml.hbs').into('chart/values.yaml', {
                project,
                additions: [{
                    in: 'srv.additionalVolumes',
                    where: { name: 'connectivity-secret' }
                }]
            })
        }
    }
}
