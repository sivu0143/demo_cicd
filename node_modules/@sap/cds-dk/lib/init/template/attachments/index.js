const { readProject } = require('../../projectReader')
const { merge } = require('../../merge')
const { srv4, attachments } = require('../../registries/mta')
const { mvn } = require('../../add')

module.exports = class AttachmentsTemplate extends require('../../plugin') {

    static help() {
        return 'SAP BTP Object Store Service'
    }

    requires() {
        return ['malware-scanner']
    }

    static hasInProduction(env) {
        return !!env.requires?.attachments || readProject().dependencies?.['@cap-js/attachments']
    }

    async run() {
        const project = readProject()
        const { isNodejs, isJava } = project
        if (isNodejs) await merge(__dirname, 'files/package.json.hbs').into('package.json')
        if (isJava) await mvn.add('attachments')
    }

    async combine() {
        const project = readProject()
        const { addMta, addHelm, addHelmUnifiedRuntime, srvPath } = project

        if (addMta) {
            const srv = srv4(srvPath)
            const additions = [srv, attachments]
            const relationships = [{
                insert: [attachments, 'name'],
                into: [srv, 'requires', 'name']
            }]
            await merge(__dirname, 'files/mta.yaml.hbs').into('mta.yaml', {
                with: project, additions, relationships
            })
        }

        if (addHelm || addHelmUnifiedRuntime) {
            await merge(__dirname, 'files', 'values.yaml').into('chart/values.yaml')
        }
    }
}
