const { readProject } = require('../../projectReader')
const { merge } = require('../../merge')
const { destinations, destinationSideBySideExtensibility } = require('../../registries/mta')

module.exports = class extends require('../../plugin') {

    requires() {
      return ['destination']
    }

    static help() {
      return 'logic extensibility via extension points'
    }

    static hasInProduction(env) {
      return !!env.requires['side-by-side-extensibility']
    }

    canRun() {
      const { isNodejs } = readProject()
      if (isNodejs) throw 'Side-by-side extensibility is not supported for Node.js yet.'
      return true
    }

    async run() {
      const project = readProject()
      const { configFile } = project
      await merge(__dirname, 'files/package.json.hbs').into(configFile, { with: project })
    }

    async combine() {
      const project = readProject()
      await merge(__dirname, 'files/mta.yaml.hbs').into('mta.yaml', { with: project, additions: [destinations, destinationSideBySideExtensibility]})
    }
}
