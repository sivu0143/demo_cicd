const { readProject } = require('../../projectReader')
const { merge } = require('../../merge')
const { srv4, redis } = require('../../registries/mta')

module.exports = class extends require('../../plugin') {

  static help() {
    return 'SAP BTP Redis, Hyperscaler Option'
  }

  async canRun() {
    const { hasMta, hasHelm, hasHelmUnifiedRuntime, isJava } = readProject()
    const onlyHelm = !hasMta && (hasHelmUnifiedRuntime || hasHelm)
    if (isJava)   throw `'cds add redis' is not available for Java yet`
    if (onlyHelm) throw `'cds add redis' is not available for Kyma yet`
    return true
  }

  static hasInProduction() {
    const { dependencies } = readProject()
    return !!dependencies?.['redis']
  }

  async run() {
    await merge(__dirname, 'files/package.json.hbs').into('package.json')
  }

  async combine() {
    const project = readProject()
    const { addMta, srvPath } = project

    if (addMta) {
      const srv = srv4(srvPath)
      await merge(__dirname, 'files/mta.yaml.hbs').into('mta.yaml', {
        project,
        additions: [srv, redis],
        relationships: [{
          insert: [redis, 'name'],
          into: [srv, 'requires', 'name']
        }]
      })
    }
  }
}
