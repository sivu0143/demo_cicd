const cds = require('../../../cds')
const { read, exists } = cds.utils
const { readProject } = require('../../projectReader')
const { merge } = require('../../merge')

module.exports = class RedisMessagingTemplate extends require('../../plugin') {

  static help() {
    return 'messaging via Redis'
  }

  requires() {
    return ['redis']
  }

  async canRun() {
    const { hasMta, hasHelm, hasHelmUnifiedRuntime, isJava } = readProject()
    const onlyHelm = !hasMta && (hasHelmUnifiedRuntime || hasHelm)
    if (isJava)   throw `'cds add redis-messaging' is not available for Java yet`
    if (onlyHelm) throw `'cds add redis-messaging' is not available for Kyma yet`
    return true
  }

  static hasInProduction(env) {
    return env.requires?.messaging?.kind === 'redis-messaging'
  }

  async run() {
    const project = readProject()
    const { configFile } = project
    project.shortcut = !exists(configFile) || typeof (await read(configFile)).cds?.requires?.messaging !== 'object'
    await merge(__dirname, 'files/package.json.hbs').into(configFile, { project })
  }
}
